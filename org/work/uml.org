* UML あれこれ

** http://plantuml.com
  
** [[http://www.itmedia.co.jp/im/articles/0302/04/news001.html][初歩のUML：第１回　まずはUMLのクラス図を書いてみよう - ITmedia エンタープライズ]]

** 分類と分解をUMLで表現する [[http://www.itmedia.co.jp/im/articles/0302/22/news001.html][ここから始めるオブジェクト指向(5) - ITmedia エンタープライズ]]

 クラスの汎化関係、集約関係を中心にもう少し複雑なクラス図について説明

*** 原本
 - [[http://www.itmedia.co.jp/im/articles/0302/22/news001.html][ここから始めるオブジェクト指向(5) - ITmedia エンタープライズ]]
 - 河合昭男，（有）オブジェクトデザイン研究所

*** 汎化関係

**** 汎化と特化

 サブクラスからスーパークラスに、より一般化することを汎化
 （generalization）、逆にスーパークラスからサブクラスに、より特殊化する
 ことを特化（specialization）と呼びます。スーパークラスを親、サブクラス
 を子、3階層以上の場合はそれぞれ祖先、子孫と呼ぶこともあります。

**** 弁別子

 ところで、あるスーパークラスに2つのサブクラスがあったとします。このと
 き図3のように2つの描き方ができますが、これらの意味の違いはどこにあると
 思いますか？

 クラスをサブクラスに分類する方法は何通りも考えることができます。例えば
 「人」というクラスは性別により男性／女性、年齢により大人／子ども、ある
 いは職業により分類することができます。この分類の基準あるいは特化の条件
 を弁別子と呼びます。

 次の2つの図（図4）を比べてください。クラス「人」の3つのサブクラスはす
 べて特化の基準が異なっています。このような場合は左のように汎化関係を別々
 にします。右のような描き方は通常しません。


**** 完全／不完全

 　弁別子で分類したとき、すべてのサブクラスが挙げられている場合は「完全」、すべてでない場合は
 「不完全」と呼びます。『世界がもし100人の村だったら』（池田 香代子再話 C．ダグラス・ラミス対
 訳、マガジンハウス）という本に従うと、人を性別という弁別子で分類すると女性52人、男性48人で52＋
 48＝100なので「男性」と「女性」で完全です。住んでいる地域で分類するとアジア61人＋アフリカ13人
 ＝74人なのでこれら2つのサブクラスだけでは不完全です（図5）。


**** 継承

 汎化関係によりサブクラスはスーパークラスの属性、操作、関連を継承します。
 親から子だけでなく、その子孫すべてに継承できるのです。例えば図7のよう
 にPCをデスクトップ型とノート型に分類します。

 属性の継承

 　「ノートPC」はバッテリ容量のほか、メーカー、価格を属性として持つ。そのサブクラス「A4サイズ
 PC」「B5サイズPC」の属性は「ノートPC」と同じ。「デスクトップPC」の属性はメーカー、価格、ス
 ロット数の3つ。そのサブクラス「家庭用PC」「ビジネス用PC」の属性は「デスクトップPC」と同じ。

 操作の継承

 　「PC」の操作「価格取得()」は、PCのサブクラスとさらにそのサブクラスに継承される。

 関連の継承

 　「ディスク」はPCのほか、PCのサブクラスとさらにそのサブクラスと関連する。

**** 多重継承

 　分類というのは意外と難しいものです。例えば名刺を整理して管理するため
 に、仕事関係、友人関係、コミュニティ関係……とグループに分類します。友
 人のAさんと仕事関係ができたとき、関係者の名刺はまとめておきたいので仕
 事関係に移します。今度は友人に連絡しようとして友人の名刺の箱を見たとき、
 Aさんの名刺を移動したことを失念してしまう可能性があります。「友人かつ
 仕事関係」というグループを追加しなければなりません。これが多重継承の考
 え方です。仕事関係、友人関係、コミュニティ関係……といったグループは完
 全に分かれている（disjoint）のではなく、重なり合っている（overlapping）
 ということです。

 例えば「FAX」というクラスと「プリンタ」というクラスを作ると「FAXプリ
 ンタ」というオブジェクトはどちらのクラスのインスタンスと考えればよいで
 しょうか。クラスを集合と考えると「FAX」という集合と「プリンタ」という
 集合は重なり合っています（図8）。

*** 集約

**** 集約

 UMLでは全体側を白抜きのひし形で表現します。

 　第3回の「図3 車を構成する部品」をUMLで表すと図11のようになります。集約の階層は何階層でも描く
 ことができます。

**** コンポジション

 　UMLでは強い集約関係をコンポジションと呼び、全体側を黒塗りのひし形で表現します。部分側のイン
 スタンスの存在は全体側に依存し、部分側のみで存在することはできません.


**** 集約とコンポジション

 　PCは本体、ディスプレイとキーボードから成ります。xx社製xxモデルというデスクトップPCを購入する
 と、これらの3つの部品で1つのセットになっています。これら3つの部品はそれぞれ独立してほかのPCに
 流用することができます。本体が壊れてもディスプレイを取り外して使用できます。

 　ノートPCは本体、ディスプレイとキーボードが一体構造となっていて、このようなことはできません。
 本体が壊れたからといってディスプレイを取り外して使用することは通常できません。このような強い集
 約関係がコンポジションです（図13）。

*** まとめ

 クラス図はUMLの基本モデルである静的モデルを表現するダイアグラムです。
 次回はUMLの動的モデルについて説明します。UMLにはオブジェクトの協調動作
 を表す相互作用図とオブジェクトのライフサイクルを表すステートチャート図
 があります。相互作用図はシーケンス図とコラボレーション図からなります。
