* プログラミングとオブジェクト指向の関係

** いかに書くか

   プログラミング・テクニックのこと

   コーディング・スタイルは、プログラムの書き方の細かい部分、
   例えば変数名の選び方や、関数の書き方などを含みます。

   アルゴリズムは問題を解決する手順のことです。世の中にはさまざまなア
   ルゴリズムが知られています。プログラムはアルゴリズムの具体化と言っ
   ても過言ではありません。

   いくつかのアルゴリズムは、自分の力だけで考え出すのは 困難です。例え
   ば、配列要素を大きさの順に並べ替えるソートのアルゴリズムは数多く知
   られていますが、既存のアルゴリズムを全く知らなければ高速なソートは
   実現できないでしょう。アルゴリズムはしばしば特定のデータ構造を伴い
   ます。かつて「プログラミングとはアルゴリズム＋データ構造である」と
   断言した偉い人もいるほどです＊3。

   デザイン・パターンとは、ソフトウエア設計に際して利用できるデータ構
   造などの設計ノウハウに名前を付けて、カタログ化したものです。アルゴ
   リズムやデータ構造も広い意味ではデザイン・パターンに分類できます。
   有名なものが23個あります＊4。

   開発手法は、
   - プログラム開発プロセス全体
   - 規模が大きくなり、関連する人員が増加すると、導入が必要

** オブジェクト指向プログラミング

   いまやオブジェクト指向はプログラミングにおける常識になりつつあり、
   今後その重要性が下がることはちょっと考えられないと思います。プログ
   ラミングを学ぶにあたって、オブジェクト指向という考え方を理解するこ
   とは大変重要なのです。

   しかしながら、プログラマを目指す人々の中には、「オブジェクト指向は
   難しい」とか、「なかなか分からない分からない」という印象を持つ人が
   多いようです。そこで今回から数回かけて、オブジェクト指向という考え
   方、オブジェクト指向プログラミングというプログラミング・テクニック
   について、丁寧に解説してみようと思います。

** オブジェクト指向の難しさ

- イメージがつかみにくい
- 実際に使おうとするとどうしたらよいのか分からない

  もう一つ重要な点は、「オブジェクト指向プログラミング」と一言で表し
  ても、実際には複数のプログラミング・テクニックが集まっていることで
  す。複数のテクニックをいっぺんに理解しようとすると、なかなか難しい
  ので、一つひとつ分解して考えてみましょう。

  個人的な意見ではオブジェクト指向プログラミングを構成するテクニック
  の中で最も重要なテクニックは「ポリモーフィズム」あるいは「多態」と
  呼ばれるものです。今月はまずポリモーフィズムから解説します。

