* まつもと直伝　プログラミングのオキテ 第1回（1）

Rubyを題材にオブジェクト指向という考え方について説明

（ネットワーク応用通信研究所　まつもと ゆきひろ）

** 奪取の構造

コンピュータもいろいろと手がかかります。
- システムを設計するのも大変
- バグの発生
- 仕様変更

主従関係が逆転し、「コンピュータのドレイ」となる

目指せ、プログラマの復権。

権利を勝ち取る戦いには「武器」が必要です。それがこの連載で解
説する「言語」と「テクニック」です。

** 復権の武器

「武器」である「プログラミング言語」と、その言語を使った「プログラミン
グ・テクニック」を解説します。

プログラミング言語は、プログラム（処理手順）を記述する方法で、世の中
にはたくさんあります。有名なものとしてはBASIC、FORTRAN、C、C++、Java、
Perl、PHP、Python、Rubyなどがあります。

言語にはそれぞれ特徴や性質、長所・短所、向き・不向きがあり、プログラム
の書きやすさ（生産性）もずいぶん違うからです。

ある研究によると、プログラム開発に用いるプログラミング言語の種類と、プ
ログラミングの生産性にはあまり相関がなく、一定期間に開発できるプログラ
ムの規模はプログラミング言語によらず（ある程度）一定なのだそうです。

また、別の研究によれば、同じタスクを達成するためのプログラミングの規模
はプログラミング言語や利用するライブラリによって最大で数百から数千倍の
差が発生するのだそうです。このことから、適切な言語を開発すれば、あなた
も数千倍デキるプログラマになれる可能性があるというわけです。

何にでも代償は必要で、プログラム開発効率が高い環境は、しばしば実行時の
効率が低いことが多いのです。

