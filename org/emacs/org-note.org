* org文書の構造

** #10 巨大なオーガナイズシステム「org-mode」の世界 (Software Design 2015年2月号掲載記事) Emacs org-mode インストール 設定 使い方

   http://emacs.rubikitch.com/sd1502-org-mode/

** 文書の構造

Emacs で M-x info で，Org-mode を開き，Document Structure を読みましょ
う。

   - headlines
   - lists
   - drawers
   - blocks

** org-mode UML図の埋め込み 		       :embed:diagram:emacs:org:mode:

   [[file:/NFS/ufs/mac/masayuki/working/plantuml/plantuml.org::*]]
    - [[http://mickey-happygolucky.hatenablog.com/entry/2016/01/21/005944][PlantUMLをemacsから使用する(puml-mode) - メモ]]

    - [[http://qiita.com/sambatriste/items/2e01d5aa91903ae72b24][org-modeでUMLを埋め込み(PlantUML) - Qiita]]
      org-mode の設定など
   
    - [[http://tanehp.ec-net.jp/heppoko-lab/prog/resource/org_mode/org_mode_memo.html][Emacs Org-mode の覚え書き]]

** example

#+BEGIN_SRC plantuml :file pngs/example-class-01.png
package Package #GreenYellow/LightGoldenRodYellow {
Class01 <|-- Class02
Class03 *-- Class04
Class05 o-- Class06
Class07 .. Class08
Class09 -- Class10
}
#+END_SRC


** 設定

: setenv GRAPHVIZ_DOT /opt/local/bin/dot
: export GRAPHVIZ_DOT

: ;; plantuml.jarへのパスを設定
: (setq org-plantuml-jar-path "~/local/jar/plantuml.jar")
:   ...
:   (plantuml . t)


** org-toggle-inline-images

 [[elisp:(org-toggle-inline-images)]] で画像のインライン表示を on/off


* 文芸的プログラミング (literate programming)

  programming と documentation を同じ文書で行なうこと

** 参考サイト

   - [[http://howardism.org/Technical/Emacs/literate-programming-tutorial.html][Introduction to Literate Programming]]

     英語ですが，シンプルで, 知りたいことがほぼ完璧に書いてあります。

   - [[http://d.hatena.ne.jp/tamura70/20100310/org][org-babel-perlを使う1/4 - 屯遁のパズルとプログラミングの日記]]

** ruby ソースコードの埋め込み方

   [[info:org#working with source code]] 

   [[info:org#Structure of code blocks]]

#+begin_example
#+name: 
#+begin_src ruby <arguments...>
body
#+end_src
#+end_example

** ruby ソースコードのedit

   [[info:org#Editing source code]]

   C-c '

** ruby ソースコードの実行方法

   [[info:org#Evaluating code blocks]]


** ruby ソースコードの export
   [[info:org#Exporting code blocks]]

#+begin_example
#+begin_src ruby :exports both
body
#+end_src
#+end_example

** ruby ソースコードの extract

   [[info:org#Extracting source code]]

#+begin_example
#+name: 
#+begin_src ruby :tangle <file>
body
#+end_src
#+end_example

